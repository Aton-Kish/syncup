// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	context "context"
	reflect "reflect"

	appsync "github.com/aws/aws-sdk-go-v2/service/appsync"
	gomock "go.uber.org/mock/gomock"
)

// MockappsyncClient is a mock of appsyncClient interface.
type MockappsyncClient struct {
	ctrl     *gomock.Controller
	recorder *MockappsyncClientMockRecorder
}

// MockappsyncClientMockRecorder is the mock recorder for MockappsyncClient.
type MockappsyncClientMockRecorder struct {
	mock *MockappsyncClient
}

// NewMockappsyncClient creates a new mock instance.
func NewMockappsyncClient(ctrl *gomock.Controller) *MockappsyncClient {
	mock := &MockappsyncClient{ctrl: ctrl}
	mock.recorder = &MockappsyncClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockappsyncClient) EXPECT() *MockappsyncClientMockRecorder {
	return m.recorder
}

// GetIntrospectionSchema mocks base method.
func (m *MockappsyncClient) GetIntrospectionSchema(ctx context.Context, params *appsync.GetIntrospectionSchemaInput, optFns ...func(*appsync.Options)) (*appsync.GetIntrospectionSchemaOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, params}
	for _, a := range optFns {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetIntrospectionSchema", varargs...)
	ret0, _ := ret[0].(*appsync.GetIntrospectionSchemaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIntrospectionSchema indicates an expected call of GetIntrospectionSchema.
func (mr *MockappsyncClientMockRecorder) GetIntrospectionSchema(ctx, params interface{}, optFns ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, params}, optFns...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIntrospectionSchema", reflect.TypeOf((*MockappsyncClient)(nil).GetIntrospectionSchema), varargs...)
}
